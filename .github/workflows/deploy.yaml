name: Vedic Frontend CI-CD

on:
  push:
    branches:
      - master
  workflow_dispatch:

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '22'

      - name: Install dependencies
        run: npm ci

      - name: Create .env file
        run: echo "REACT_APP_API_BASE_URL=${{ secrets.FRONTEND_API_URL }}" > .env

      - name: Build application
        run: npm run build

      - name: Package build and dependencies
        run: tar -cvzf deploy.tar.gz .next node_modules package.json package-lock.json

      - name: Copy package to server
        uses: appleboy/scp-action@v0.1.7
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USERNAME }}
          key: ${{ secrets.KEY }}
          port: ${{ secrets.PORT }}
          source: deploy.tar.gz
          target: /var/www/html/vedic-healing/Vedic-healing---frontend/

      - name: Deploy on server
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USERNAME }}
          key: ${{ secrets.KEY }}
          port: ${{ secrets.PORT }}
          script: |
            cd /var/www/html/vedic-healing/Vedic-healing---frontend/
            tar -xvzf deploy.tar.gz
            rm deploy.tar.gz
            # assuming ecosystem.config.js is already there on server
            pm2 restart ecosystem.config.js
